<sitemesh>
    <!--&lt;!&ndash;默认情况下，-->
          <!--sitemesh 只对 HTTP 响应头中 Content-Type 为 text/html 的类型进行拦截和装饰，-->
         <!--我们可以添加更多的 mime 类型&ndash;&gt;-->
       <!--<mime-type>text/html</mime-type>-->
       <!--<mime-type>application/vnd.wap.xhtml+xml</mime-type>-->
       <!--<mime-type>application/xhtml+xml</mime-type>-->
    <!-- 默认装饰器，当下面的路径都不匹配时，启用该装饰器进行装饰 -->
    <!--<mapping decorator="/default-decorator.html"/>-->

    <!--&lt;!&ndash; 对不同的路径，启用不同的装饰器 &ndash;&gt;-->
    <!--<mapping path="/admin/*" decorator="/another-decorator.html"/>-->
    <!--<mapping path="/*.special.jsp" decorator="/special-decorator.html"/>-->

    <!--&lt;!&ndash; 对同一路径，启用多个装饰器 &ndash;&gt;-->
    <!--<mapping>-->
        <!--<path>/articles/*</path>-->
        <!--<decorator>/decorators/article.html</decorator>-->
        <!--<decorator>/decorators/two-page-layout.html</decorator>-->
        <!--<decorator>/decorators/common.html</decorator>-->
    <!--</mapping>-->

    <!--&lt;!&ndash; 排除，不进行装饰的路径 &ndash;&gt;-->
    <!--<mapping path="/javadoc/*" exclue="true"/>-->
    <!--<mapping path="/brochures/*" exclue="true"/>-->

    <!--&lt;!&ndash; 自定义 tag 规则 &ndash;&gt;-->
    <!--<content-processor>-->
        <!--<tag-rule-bundle class="com.something.CssCompressingBundle" />-->
        <!--<tag-rule-bundle class="com.something.LinkRewritingBundle"/>-->
    <!--</content-processor>-->
    <!--...-->
    <content-processor>
        <tag-rule-bundle class="com.yue.tag.PageTagRuleBundle" />
    </content-processor>

    <mapping path="/**/page*" decorator="/WEB-INF/views/decorator/pageDecorator.jsp"/>
    <mapping path="/index" decorator="/WEB-INF/views/decorator/indexDecorator.jsp"/>
    <!--<mapping path="*/redirect/*.html" decorator="/WEB-INF/common/pageDecorator.jsp"></mapping>-->
</sitemesh>